name: Zip Bomb Upload Workflow

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unzip-and-upload:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        batch_index: [0, 1, 2, 3, 4] # Adjust based on total number of batches

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Install unzip utility
      - name: Install unzip
        run: sudo apt-get install -y unzip

      # Step 3: List files in the ZIP and split into batches
      - name: List and split files into batches
        id: list_files
        run: |
          unzip -l zbbig2.zip | awk '/assets\// {print $NF}' > file_list.txt
          total_files=$(wc -l < file_list.txt)
          batch_size=5

          # Split the file list into chunks for parallel processing
          split -l $batch_size file_list.txt batch_file_

      # Step 4: Process batch files and commit immediately
      - name: Process batch files
        run: |
          batch_file="batch_file_$(printf "%02d" ${{ matrix.batch_index }})"
          if [ -f "$batch_file" ]; then
            mapfile -t files < "$batch_file"

            for file in "${files[@]}"; do
              retries=0
              max_retries=3
              retry_delay=5
              
              # Extract file with retry logic
              echo "Processing $file..."
              until unzip -o "zbbig2.zip" "$file" || [ $retries -ge $max_retries ]; do
                retries=$((retries + 1))
                echo "Retrying extraction of $file ($retries/$max_retries)..."
                sleep $retry_delay
              done

              if [ $retries -lt $max_retries ]; then
                echo "$file extracted successfully."
                
                # Set up Git user and commit the file
                git config --global user.name 'github-actions[bot]'
                git config --global user.email 'github-actions[bot]@users.noreply.github.com'
                git add "$file"
                git commit -m "Add extracted file: $file"

                # Push changes immediately
                retries=0
                until git push || [ $retries -ge $max_retries ]; do
                  retries=$((retries + 1))
                  echo "Retrying push of $file ($retries/$max_retries)..."
                  sleep $retry_delay
                done

                if [ $retries -lt $max_retries ]; then
                  echo "$file pushed successfully."

                  # Clean up the file to free up memory
                  rm "$file" || echo "Failed to delete $file"
                else
                  echo "Failed to push $file after $max_retries attempts."
                fi
              else
                echo "Failed to extract $file after $max_retries attempts."
              fi
            done
          fi

      # Step 5: Clean up
      - name: Clean up
        run: rm -f file_list.txt batch_file_*
